<launch>
  <!-- size of map, change the size in x, y, z according to your application -->
  <arg name="map_size_x" value="40.0"/>
  <arg name="map_size_y" value="40.0"/>
  <arg name="map_size_z" value=" 10.0"/>

  <arg name="enable_vins" default="false"/>

  <!-- topic of your odometry such as VIO or LIO -->
  <arg unless="$(arg enable_vins)" name="odom_topic" value="/airsim_node/drone_1/odom_local_enu" />
  <arg if="$(arg enable_vins)" name="odom_topic" value="/vins_estimator/imu_propagate" />

  <arg name="cmd_topic" value="/mav/param_identify/unique_traj"/>

  <arg name="enable_depth_input" default="true"/>

  <!-- main algorithm params -->
  <include file="$(find plan_manage)/launch/airsim_algorithm.launch">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>

    <arg name="odometry_topic" value="$(arg odom_topic)"/>

    <!-- camera pose: transform of camera frame in the world frame -->
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- don't set cloud_topic if you already set these ones! -->
    <arg name="camera_pose_topic" value="/pcl_render_node/camera_pose"/>
    <arg if="$(arg enable_depth_input)" name="depth_topic" value="/airsim_node/drone_1/front_center_custom/DepthPlanar"/>
    <arg unless="$(arg enable_depth_input)" name="depth_topic" value="/no_use"/>

    <!-- topic of point cloud measurement, such as from LIDAR  -->
    <!-- don't set camera pose and depth, if you already set this one! -->
    <arg name="cloud_topic" value="/pcl_render_node/cloud"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="1.5" />
    <arg name="max_acc" value="1.0" />

    <!-- 1: use 2D Nav Goal to select goal  -->
    <!-- 2: use global waypoints below  -->
    <arg name="flight_type" value="2" />
    
    <!-- global waypoints -->
    <!-- If flight_type is set to 2, the drone will travel these waypoints one by one -->
    <arg name="point_num" value="1" />

    <!-- <arg name="point0_x" value="-3.5" />
    <arg name="point0_y" value="18.0" />
    <arg name="point0_z" value="2.0" /> -->

    <arg name="point0_x" value="1.0" />
    <arg name="point0_y" value="0.0" />
    <arg name="point0_z" value="1.5" />

    <arg name="point1_x" value="0.0" />
    <arg name="point1_y" value="10.0" />
    <arg name="point1_z" value="2.0" />

    <arg name="point2_x" value="-10.0" />
    <arg name="point2_y" value="-10.0" />
    <arg name="point2_z" value="0.0" />

    <arg name="point3_x" value="10.0" />
    <arg name="point3_y" value="-10.0" />
    <arg name="point3_z" value="0.0" />
    
  </include>

  <!-- trajectory server -->
  <node pkg="plan_manage" name="traj_server" type="traj_server" output="screen">
    <!-- <remap from="/position_cmd" to="planning/pos_cmd"/> -->
    <param name="traj_server/init_x" value="0.0"/>
    <param name="traj_server/init_y" value="0.0"/>
    <param name="traj_server/init_z" value="1.0"/>
    <param name="traj_server/init_yaw" value="1.57"/>

    <param name="traj_server/init_sleep_time" value="1.5" type="double"/>

    <param name="traj_server/time_forward" value="1.5" type="double"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <remap from="position_cmd" to="$(arg cmd_topic)"/>
    
  </node>

  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>
    <remap from="~goal" to="/move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="/traj_start_trigger"/>
    <param name="waypoint_type" value="manual-lonely-waypoint"/>
  </node>

  <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="$(arg odom_topic)"/>
        <param name="color/a" value="1.0"/>    
        <param name="color/r" value="0.0"/>        
        <param name="color/g" value="0.0"/>        
        <param name="color/b" value="1.0"/>       
        <param name="covariance_scale" value="100.0"/>       
        <param name="robot_scale" value="1.0"/>
  </node>

  <!-- <include file="$(find map_publisher)/launch/map_publisher_bag.launch"/> -->
  <!-- <include file="$(find map_publisher)/launch/map_publisher.launch"/>

  <node pkg="map_publisher" name="visual_gt_path" type="visual_gt_path.py" output="screen"/>

  <include file="$(find lidar_converter)/launch/lidar_converter.launch"/> -->

   <!-- <node pkg="tf" type="static_transform_publisher" name="vins2world" args="0 0 0 0 0 0 world vins 100"/> -->

</launch>
